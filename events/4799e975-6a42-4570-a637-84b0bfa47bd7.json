{
  "url": "https://fahrplan.events.ccc.de/congress/2019/Fahrplan/events/10751.html",
  "id": 10751,
  "guid": "4799e975-6a42-4570-a637-84b0bfa47bd7",
  "logo": null,
  "date": "2019-12-28T19:10:00+01:00",
  "start": "19:10",
  "duration": "00:40",
  "room": "Clarke",
  "slug": "36c3-10751-the_inside_story_there_are_apps_in_apps_and_here_is_how_to_break_them",
  "title": "The Inside Story: There are Apps in Apps and Here is How to Break Them",
  "subtitle": "Break Isolation and Sandbox in the Instant Apps",
  "track": "Security",
  "type": "lecture",
  "language": "en",
  "abstract": "With the rapid development of mobile internet, apps become more and more complex. However, their most used functions are limited to a few pages.\r\n\r\nEnters instant app. It has many advantages over normal apps, such as click-to-play and concise design, and it's becoming more and more popular. There is some form of instant app framework in many popular apps, such as Google Play, WeChat, TikTok, etc. In addition, many phone vendors have also embedded instant app frameworks in their pre-installed applications.\r\n\r\nHowever, there is barely any public research on attacking instant apps.",
  "description": "In this talk, we will dive into a common architecture of instant app framework, and demonstrate attack models for it. Based on these attack models, we have reverse engineered top instant app frameworks. We will show how to bypass various kinds of sandboxing and restriction technologies to break isolations between instant apps.\r\n\r\nThese vulnerabilities could lead to sensitive information leakage, identity theft, account takeover and other severe consequences. During the study of Google Instant app, we also bypassed component access restrictions, which greatly expands attack surface.\r\n\r\nThese vulnerabilities and attack models affects more than 60% of Android devices and at least 1 billion users.\r\n\r\nFinally, we summarize the root causes of these vulnerabilities at the architectural level and point out the potential attack points. We will also propose practical mitigation measures for specific vulnerabilities. \r\n\r\nWe hope we could make users and developers aware of the potential security risks while enjoying the convenience of instant apps. We also hope to make security community aware of this emerging new attack surface.\r\n\r\nMy Presentation Outline as follows:\r\n1. Introduction\r\n\r\nBrief introduction to instant app. We define terms that appears later in the talk, such as \u201csupervisor app\u201d, \u201crender layer\u201d, \u201clogic layer\u201d, etc. Supervisor app is a platform application that manages and runs instant app.\r\n\r\n2. WebView based architecture\r\n\r\nDetailed description of a common architecture of WebView based instant app. Explain its similarities and differences with React Native and traditional WebView. We abstract it as a multiple domains - API asynchronous communication model.\r\n\r\n3. RPC communication between instant app, supervisor app and backend server\r\n\r\nWe describe how an instant app invoke APIs provided by supervisor app through cross-domain access. \r\n\r\nAnd we explain how the supervisor app and backend server identify the RPC caller. \r\n\r\n4. Vulnerabilities to break instant app isolation\r\n\r\nBased on the communication described in the previous section, we detail two different approaches to break the isolation between instant apps. \r\n\r\nWe encountered some problem in actual exploitation. To make our payload run on victim\u2019s phone, we need to bypass security policies enforced during server-side compilation. We combined features of Webpack and JavaScript to break API restrictions to complete the attack.\r\n\r\nAt the end of this section we will demonstrate an attack that breaks app isolation to steal sensitive information and take over accounts.\r\n\r\n5. Mitigation\r\n\r\nWe summarize the root causes of these vulnerabilities at the architectural level. We also propose practical mitigation measures for specific vulnerabilities.\r\n\r\n6. Other architectures and vulnerabilities\r\n\r\nThere are some other different architectures, such as the one used by Google Play. We will briefly describe a vulnerability we found that bypass the Google Instant App component access sandbox. It can expand the attack surface and transform local attacks to remote attacks.\r\n\r\n7. Closing\r\n\r\nFinally, we will give a outlook to the future evolvement of instant app and potential attack surfaces.\r\n\r\nThe up to date research you can take away from my presentation is as follows:\r\n\r\n1. A common architecture of WebView based instant app and communication mechanism between modules. This is completely new mobile attack surface.\r\n\r\n2. Instant app attack model, and the approach to extend attack surface in Android, which may be a key gadget for your exploit chain in a remote attack.\r\n\r\n3. Two vulnerabilities that break instant app isolation in XXX. And a vulnerability that bypass components access sandbox in Google Instant App.\r\n\r\n4. Mitigation for these vulnerabilities, and how to build a safer instant app framework.",
  "recording_license": "",
  "do_not_record": false,
  "persons": [
    {
      "id": 9557,
      "public_name": "RonnyXing"
    }
  ],
  "links": [],
  "attachments": []
}